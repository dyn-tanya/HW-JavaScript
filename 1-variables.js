/*Змінні - для зберігання інформації
не може починатися на цифру та складатися зі спецсимовлів, може починатись з букв
не можна називати зарезервованими словами let error, alert, class, finally

let number = 5; //сховище для інфи, яку можна надалі змінювати
const userScore = 1000; //створює сховище для інфи та називається константа, далі змінювати не можна
поки пнод процес не дійшов до рядка, то цих змінних let, const не існує
let number1; */

//Назви змінних патерни:
//camelCase
//snake_case (для констант)
//UPPER_SNAKE_CASE (для констант)
//kebab-case для назви файлів-директорій
//PascalCase - для назви класів

//Змінні з різним регістром - це різні змінні

let number = 5;
console.log(number)

number = 12;  //переназначуємо (без let, бо буде як нова змінна)
console.log(number)


const userScore1 = 1000; 
console.log(userScore1)

userScore1 = 12;
console.log(userScore1)

//не можна змінювати тип константи, але у випадку об'єкта - властивість об'єкта може буде зміненим

const obj = {
    age:20
}
console.log(obj)

//obj = 40;
///console.log(obj)

obj.age = 30;
console.log(obj)

console.log(firstName)
var firstName = 'Tanya' //працює як і let, var існує в пам'яті комп'ютера, ще до того як вона була об'явлена в коді. Не будемо використовувати


let firstName1 = 'Tanya' //використовувати змінну let можна тільки після того, як вона була об'явлена
console.log(firstName1)

//Область видимості зміних

{
    let result = 50;  //змінні доступні в межах якогось блока коду {} Поза цим блоком змінної не існує
}
console.log(result);


{
    var result1 = 50;  //var доступний для всього кода, незалежно від блока
}
console.log(result1);

alert();   //; в кінці кожного логічного блоку
[].push('a')


//Назви змінних, функцій, класів
//Назва має бути короткою і вичерпною назвою 

let a = 3000;
let b = 2000;
 // 100 рядків коду
console.log("Ширина авто: " +  a + ", довжина: " + b);


let vehicleBodyWidth= 3000;
let vehicleBodyLength= 2000;
 // 100 рядків коду
console.log("Ширина авто: " +  vehicleBodyWidth + ", довжина: " + vehicleBodyLength);

//Потрібно зберігати єдиний стиль коду і єдину логіку назви змінних

